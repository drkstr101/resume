/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds
 */
import groovy.json.*

plugins {
	id 'eclipse'
	id 'idea'
	id 'project-report'
	id 'drkstr101.resume'
}

group = 'drkstr101'
version = '2.0.0'

Calendar tocal(int year, int month) {
	return Calendar.getInstance().tap {
		set(Calendar.YEAR, year)
		set(Calendar.MONTH, month)
		set(Calendar.HOUR_OF_DAY, 0)
		set(Calendar.MINUTE, 0)
		set(Calendar.SECOND, 0)
		set(Calendar.MILLISECOND, 0)
	}
}

resume {
	fullName = "Aaron R Miller"
	email = "aaron.miller@waweb.io"

	skills {
		leadership {
			skills {
				business_analysis
				product_development
				project_management
				domain_modeling
				finance
			}
		}
		programming {
			skills {
				web {
					label = "Web Applications"
					skills {
						pwa {
							label = "Progressive Web Apps"
						}
						closure_compiler
						jquery_mobile {
							label = "jQuery Mobile"
						}
						bootstrap
						createjs
						nodejs {
							skills {
								react {
									label = "Rect/Redux"
								}
								flow
								expressjs
								typescript
							}
						}
					}
				}
				flash {
					skills {
						flex
						as3 {
							label = "Actionscript 3"
						}
					}
				}
				php
				jdk {
					label = "Java JDK"
					skills {
						groovy
						kotlin
						xtend
					}
				}
				python
				cpp
				cs
				rust
			}
		}
		ux {
			label = "UI/UX"
			skills {
				viz {
					label = "Data Visualization"
				}
				html5 {
					label = "HTML5/CSS3"
				}
				flash {
					label = "Adobe Flash/Animate"
				}
			}
		}
		systems {
			skills {
				database {
					skills {
						mysql {
							label = "MySQL/Maria"
						}
						postgres {
							label = "Postgresql"
						}
						msql {
							label = "MS SQL Server"
						}
					}
				}
				api {
					label = "API"
					skills {
						rest {
							label = "REST"
						}
						soap {
							label = "SOAP"
						}
						scorm {
							label = "SCORM"
						}
						oauth2 {
							label = "OAuth 2"
						}
						value
						servicenow {
							label = "ServiceNow"
						}
						google_sheets
						emf {
							label = "EMF/ECore"
						}
					}
				}
				mobile {
					skills {
						air {
							label = "Adobe AIR"
						}
						unreal_engine
						gvr {
							label = "GVR/Oculus"
						}
						android_ndk {
							label = "Android NDK"
						}
					}
				}
				ecommerce {
					label = "eCommerce"
					skills {
						magento
					}
				}
			}
		}
		devops {
			label = "DevOps"
			skills {
				jenkins
				apache_ant
				gradle
				aws {
					label = "Amazon Web Services"
				}
				gcs {
					label = "Google Cloud Services"
				}
				kubernetes
				stackstorm
				terraform
			}
		}
	}

	accomplishments {
		// TODO...
	}

	employers {
		waweb {
			employer = "Washington Web Apps"
			type = "Self"
			startDate = tocal(2019, 06)
		}
		expedia {
			employer = "Expedia Group / WAVSYS"
			type = "Direct1099"
			startDate = tocal(2018, 11)
			endDate = tocal(2019, 06)
		}
		surge  {
			employer = "Catalyte-Surge IT Services"
			type = "Direct1099"
			startDate = tocal(2017, 10)
			endDate = tocal(2018, 06)
		}
		nulabel {
			employer = "NuLabel Technologies"
			type = "Direct1099"
			startDate = tocal(2017, 05)
			endDate = tocal(2018, 07)
		}
		vivid {
			employer = "Vivid Learning Systems"
			type = "DirectW2"
			startDate = tocal(2010, 10)
			endDate = tocal(2017, 04)
		}
		demand_lending {
			employer = "Demand Lending"
			type = "CorpToCorp"
			// startDate = TODO
		}
		all_student_rentals {
			employer = "All Student Rentals"
			type = "CorpToCorp"
			// startDate = TODO
		}
		team08 {
			employer = "Team08 Snowboards"
			type = "CorpToCorp"
			// startDate = TODO
		}
		splash_labs {
			employer = "Splash Labs"
			type = "Self"
			// startDate = TODO
		}
		nccu {
			employer = "North Coast Credit Union"
			type = "DirectW2"
			startDate = tocal(2006, 02)
			endDate = tocal(2007, 06)
		}
		hsbc {
			employer = "HSBC"
			type = "DirectW2"
			startDate = tocal(2004, 04)
			endDate = tocal(2005, 10)
		}
		capital_one {
			employer = "Capital One"
			type = "DirectW2"
			startDate = tocal(2004, 04)
			endDate = tocal(2003, 01)
		}
	}

	references {
		// TODO...
	}
}
